/*! normalize.css v3.0.2 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type="checkbox"],input[type="radio"]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto}input[type="search"]{-webkit-appearance:textfield;-webkit-box-sizing:content-box;box-sizing:content-box}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:bold}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}*,*:after,*:before{margin:0;padding:0;-webkit-box-sizing:border-box;box-sizing:border-box}img{width:auto;max-width:100%;height:auto !important}.grid{width:100%;margin:0 auto}.grid,.row{*zoom:1}.grid:before,.row:before,.grid:after,.row:after{content:" ";display:table}.grid:after,.row:after{clear:both}[class*='col-']{float:left;padding:.5em;width:100%;min-height:1px}@media only screen and (min-width: 30em){.grid{width:95%;max-width:65em}.col-1{width:8.33333%}.col-2{width:16.66667%}.col-3{width:25%}.col-4{width:33.33333%}.col-5{width:41.66667%}.col-6{width:50%}.col-7{width:58.33333%}.col-8{width:66.66667%}.col-9{width:75%}.col-10{width:83.33333%}.col-11{width:91.66667%}.col-12{width:100%}}*{-webkit-box-sizing:border-box;box-sizing:border-box}body{color:#04292b;-webkit-transition:all 200ms ease-in-out;transition:all 200ms ease-in-out}body.developer{color:white;background-color:#04292b;font-family:"Lucida Sans Typewriter", "Lucida Console", monaco, "Bitstream Vera Sans Mono", monospace}body.developer p{font-size:13px}body.developer ul li{font-size:14px}body.developer a{color:#fbc93b}body.developer nav a{color:#04292b}body.developer h3{color:#fbc93b}body.developer .job-title{color:#ccc}body.developer .experience-item .grey{color:#7D827B}body.developer .portfolio-item.design{width:0;display:none}body.developer .skills-details li.design,body.developer .knowledge-details li.design{max-height:0;padding:0}body.developer .portfolio-item .portfolio-title a{color:white}body.developer .github svg path{fill:white !important}body.designer{font-family:"Helvetica Neue", Helvetica, Arial, sans-serif}body.designer .portfolio-item.dev{width:0;display:none}body.designer .portfolio-item.design img{border:1px solid #d6d6d6}body.designer .skills-details li.dev,body.designer .knowledge-details li.dev{max-height:0;padding:0}a{text-decoration:none;color:#d40000}p{line-height:1.6;font-size:0.9rem}h1,h2,h3,h4,h5,h6,nav{font-family:"Oswald",sans-serif;font-weight:500;text-transform:uppercase;letter-spacing:-1px;margin:0;line-height:1.2}h1{font-size:4.4rem;line-height:1;letter-spacing:-4px}h3{color:#fbc93b;font-size:1.4rem}h2{font-size:2.4rem;margin-bottom:10px;letter-spacing:-2px}.section,.nav-container{width:700px;margin:0 auto;max-width:100%;padding-left:10px;padding-right:10px}nav ul.navigation{float:right}nav ul.switchskill a.active{background-color:#e6ad2c;color:white}nav ul.switchskill a{padding-left:30px}nav ul.navigation a.active{color:#d40000}ul{list-style:none}nav{background-color:#fbc93b;color:#04292b;overflow:hidden;position:fixed;z-index:99;left:0;right:0}@media screen and (max-width: 640px){nav{margin-bottom:20px}}nav li{display:inline-block;float:left}nav li a{display:block;color:#04292b;font-size:18px;padding:13px 0;padding-right:20px;-webkit-transition:all 300ms ease-in-out;transition:all 300ms ease-in-out}@media screen and (max-width: 380px){nav li a{padding-right:15px;font-size:17px}}.cl-effect-1 a::before,.cl-effect-1 a::after{display:inline-block;opacity:0;-webkit-transition:-webkit-transform 0.3s, opacity 0.2s;-webkit-transition:opacity 0.2s, -webkit-transform 0.3s;transition:opacity 0.2s, -webkit-transform 0.3s;transition:transform 0.3s, opacity 0.2s;transition:transform 0.3s, opacity 0.2s, -webkit-transform 0.3s;position:relative;top:-2px;font-size:16px}.cl-effect-1 a::before{margin-right:3px;content:'[';-webkit-transform:translateX(20px);transform:translateX(20px)}.cl-effect-1 a::after{margin-left:3px;content:']';-webkit-transform:translateX(-20px);transform:translateX(-20px)}.cl-effect-1 a:hover::before,.cl-effect-1 a:hover::after,.cl-effect-1 a:focus::before,.cl-effect-1 a:focus::after{opacity:1;-webkit-transform:translateX(0px);transform:translateX(0px)}.wrapper{padding-top:47px}#about,#skills,#experience{display:-webkit-box;display:-ms-flexbox;display:flex}@media screen and (max-width: 640px){#about,#skills,#experience{-ms-flex-wrap:wrap;flex-wrap:wrap}}.section{padding:50px 10px}@media screen and (max-width: 640px){.section{padding:10px 10px}}.skills-details li,.knowledge-details li{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-weight:700;padding:3px 0;-webkit-transition:all 300ms ease-in-out;transition:all 300ms ease-in-out;max-height:25px;overflow:hidden}.skills-details li .skill-rating,.knowledge-details li .skill-rating{display:-webkit-box;display:-ms-flexbox;display:flex;margin-right:30px}.skills-details li .skill-rating .circle,.knowledge-details li .skill-rating .circle{width:12px;height:12px;border-radius:50%;background-color:#ccc;margin-right:4px}.skills-details li .skill-rating .circle.skilled,.knowledge-details li .skill-rating .circle.skilled{background-color:#fbc93b}.skills-details li .skill-rating .halfcircle-left,.knowledge-details li .skill-rating .halfcircle-left{width:6px;height:12px;border-radius:6px 0 0 6px;background-color:#fbc93b}.skills-details li .skill-rating .halfcircle-right,.knowledge-details li .skill-rating .halfcircle-right{width:6px;height:12px;border-radius:0px 6px 6px 0px;background-color:#ccc;margin-right:4px}.portfolio-items{position:relative;overflow:hidden;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.portfolio-items .portfolio-item{width:50%;overflow:hidden;padding-bottom:20px;float:left;-webkit-transition:all 300ms ease-in-out;transition:all 300ms ease-in-out}.portfolio-items .portfolio-item img{max-width:225px}@media screen and (max-width: 640px){.portfolio-items .portfolio-item{width:50%}}@media screen and (max-width: 410px){.portfolio-items .portfolio-item{width:100%}}.portfolio-items .portfolio-item .portfolio-title{font-weight:700;font-size:1rem}.portfolio-items .portfolio-item .portfolio-title a{color:#04292b}.portfolio-items .portfolio-item .portfolio-category{color:#fbc93b;line-height:1}.portfolio-items .portfolio-item .portfolio-description{max-height:0px;overflow:hidden;-webkit-transition:all 500ms ease-in-out;transition:all 500ms ease-in-out;font-size:13px;padding-right:0px;max-width:275px;padding-top:10px}.portfolio-items .portfolio-item.open.close .portfolio-description{max-height:500px}.experience-item{margin-bottom:20px}.experience-item .grey{color:#7D827B;font-size:0.8rem}.company{font-weight:700;line-height:1.2;font-size:1rem}.job-title{color:#04292b}.photo{-ms-flex-negative:0;flex-shrink:0;padding-right:20px}.photo .avatar{border-radius:50%;max-width:75px}.bio{max-width:320px}@media screen and (max-width: 640px){.bio{max-width:640px;margin-top:20px}}.name-details{padding-right:40px;max-width:320px}.name-details h1,.name-details h3{margin-bottom:10px}.name-details h5{margin:5px 0;letter-spacing:0px}.name-details h5 span{color:#7D827B}.name-details .social{display:-webkit-box;display:-ms-flexbox;display:flex}.name-details .social a{font-size:0;line-height:0;width:30px;height:30px;margin-right:10px;margin-bottom:10px;margin-top:5px}.name-details .social a svg{width:30px;height:30px}.skills-details,.knowledge-details,.experience,.education{-ms-flex-preferred-size:50%;flex-basis:50%;padding-right:50px}@media screen and (max-width: 640px){.knowledge-details,.experience,.education{-ms-flex-preferred-size:100%;flex-basis:100%;padding-right:0px;padding:20px 0}}@media screen and (max-width: 640px){#about,#portfolio{padding-top:30px}.skills-details{-ms-flex-preferred-size:270px;flex-basis:270px;padding-right:0px;padding:20px 0}.nav-container{padding:0}.switchskill li{width:50%}.switchskill li a{text-align:center}.wrapper{padding-top:94px}nav ul.navigation{float:none;display:-webkit-box;display:-ms-flexbox;display:flex;width:100%}nav ul.navigation li{float:none;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}nav ul.navigation li a{text-align:center;padding-right:0}}.date{color:#fbc93b}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
